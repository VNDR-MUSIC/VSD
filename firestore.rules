rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Default: Deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // ACCOUNTS
    // Allow users to read their own account data.
    // Allow users to create their own account document.
    // Prevent users from updating fields they shouldn't, like roles or balance.
    match /accounts/{uid} {
      allow read, create: if isOwner(uid);
      allow update: if isOwner(uid) && request.resource.data.keys().hasOnly(['displayName', 'photoURL']);
    }

    // TRANSACTIONS (SUBCOLLECTION)
    // Allow users to list and read their own transactions.
    match /accounts/{uid}/transactions/{transactionId} {
      allow list, read: if isOwner(uid);
      // Users can't create transactions directly; this is done by backend logic.
      allow create, update, delete: if false;
    }
    
    // TRANSACTIONS (GLOBAL)
    // Only admins can access the global transaction log.
    match /transactions/{transactionId} {
      allow read, list: if isAdmin();
      allow write: if false; // Only backend can write
    }

    // TENANTS
    // Publicly readable for the network status page.
    // Only admins can create or modify tenants.
    match /tenants/{tenantId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // ADVERTISEMENTS
    // Publicly readable for the "Earn" page.
    // Writes are restricted.
    match /advertisements/{adId} {
      allow read: if true;
      // Allow admins to write, and allow backend to update clicks.
      allow write: if isAdmin() || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks']));
    }
    
    // ADVERTISER APPLICATIONS
    // Users can create (submit) their own application.
    // Only admins can read or update (approve/reject) applications.
    match /advertiserApplications/{userId} {
        allow create: if isOwner(userId);
        allow read, update: if isAdmin();
    }

    // API LOGS
    // No client access. Logs are written by the backend only.
    match /api_logs/{logId} {
      allow read, write: if false;
    }
    
    // ADMINS
    // Only other admins can see who is an admin.
    match /admins/{adminId} {
        allow read, write: if isAdmin();
    }
  }
}
