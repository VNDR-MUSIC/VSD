/**
 * @fileOverview Firestore Security Rules for VSD Token Information.
 *
 * Core Philosophy:
 * This ruleset allows public read access to all data, but restricts write access.
 * This approach is suitable for a data model where information is intended to be publicly available,
 * but modifications are controlled.
 *
 * Data Structure:
 * The Firestore database is organized around VSD tokens, with subcollections for associated ecosystem projects,
 * developer resources, and legal documents. The primary hierarchy is:
 * - /vsdTokenInfo/{vsdTokenInfoId}
 * - /vsdTokenInfo/{vsdTokenInfoId}/ecosystemProjects/{ecosystemProjectId}
 * - /vsdTokenInfo/{vsdTokenInfoId}/developerResources/{developerResourceId}
 * - /vsdTokenInfo/{vsdTokenInfoId}/legalDocuments/{legalDocumentId}
 *
 * Key Security Decisions:
 * - All data is publicly readable (`get` and `list` are allowed for all users).
 * - Write operations (create, update, delete) are denied. If writes are needed,
 *   rules should be updated to include authorization logic (e.g., checking for
 *   a specific admin role).
 * - No data validation is performed, as the prototyping philosophy prioritizes
 *   flexibility and rapid iteration.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to VSD token information, but denies write access.
     * @path /vsdTokenInfo/{vsdTokenInfoId}
     * @allow (get, list) Any user can read VSD token information.
     * @deny (create, update, delete) No user can create, update, or delete VSD token information.
     * @principle Allows public read access for all data, but denies all write operations.
     */
    match /vsdTokenInfo/{vsdTokenInfoId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to ecosystem projects, but denies write access.
     * @path /vsdTokenInfo/{vsdTokenInfoId}/ecosystemProjects/{ecosystemProjectId}
     * @allow (get, list) Any user can read ecosystem project information.
     * @deny (create, update, delete) No user can create, update, or delete ecosystem project information.
     * @principle Allows public read access for all data, but denies all write operations.
     */
    match /vsdTokenInfo/{vsdTokenInfoId}/ecosystemProjects/{ecosystemProjectId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to developer resources, but denies write access.
     * @path /vsdTokenInfo/{vsdTokenInfoId}/developerResources/{developerResourceId}
     * @allow (get, list) Any user can read developer resource information.
     * @deny (create, update, delete) No user can create, update, or delete developer resource information.
     * @principle Allows public read access for all data, but denies all write operations.
     */
    match /vsdTokenInfo/{vsdTokenInfoId}/developerResources/{developerResourceId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to legal documents, but denies write access.
     * @path /vsdTokenInfo/{vsdTokenInfoId}/legalDocuments/{legalDocumentId}
     * @allow (get, list) Any user can read legal document information.
     * @deny (create, update, delete) No user can create, update, or delete legal document information.
     * @principle Allows public read access for all data, but denies all write operations.
     */
    match /vsdTokenInfo/{vsdTokenInfoId}/legalDocuments/{legalDocumentId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}