
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user's UID exists as a document in the 'admins' collection.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // --- Collection Rules ---

    // Admins collection is read-only for everyone, including admins,
    // to prevent accidental changes. It should be managed server-side.
    match /admins/{adminId} {
      allow read, write: if false; 
    }

    match /accounts/{userId} {
      // An admin can do anything. A user can get or update their own document.
      allow read, update: if isAdmin() || isOwner(userId);
      // Only admins can create or delete accounts.
      allow create, delete: if isAdmin();
    }
    
    match /accounts/{userId}/transactions/{transactionId} {
        // A user can read their own transactions. Admins can read any.
        allow read: if isAdmin() || isOwner(userId);
        // Only an admin (or a backend service) can create transactions.
        allow write: if isAdmin();
    }

    match /tenants/{tenantId} {
      // Any authenticated user can read tenant information.
      allow read: if request.auth != null;
      // Only admins can create or modify tenants.
      allow write: if isAdmin();
    }
    
    match /transactions/{transactionId} {
        // Global transaction log is admin-only.
        allow read, write: if isAdmin();
    }
    
    match /advertisements/{adId} {
        // Any authenticated user can read advertisement info.
        allow read: if request.auth != null;
        // Only admins can create, update, or delete ads.
        allow write: if isAdmin();
    }

    match /advertiserApplications/{appId} {
      // A user can create their own application document (keyed by their UID).
      allow create: if isOwner(appId);
      // Only admins can read, update (approve/reject), or delete applications.
      allow read, update, delete: if isAdmin();
    }
  }
}
